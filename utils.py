# -*- coding: utf-8 -*-
"""utils

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NLV0Loex3_IlzYBoF-zHp26byEm9Rj-B
"""

import pandas as pd
from prophet import Prophet
import matplotlib.pyplot as plt

def train_and_predict_regressor(df, target_column, periods, freq='D'):
    """
    Train a Prophet model to predict future values of a given target column.

    Parameters:
    - df: DataFrame containing the historical data.
    - target_column: The name of the column to be predicted.
    - periods: Number of periods to predict into the future.
    - freq: Frequency of the prediction.

    Returns:
    - future_predictions: DataFrame containing future dates and their predicted values.
    """
    model = Prophet()
    df = df.rename(columns={target_column: 'y', 'ds': 'ds'})
    model.fit(df)
    future = model.make_future_dataframe(periods=periods, freq=freq)
    forecast = model.predict(future)
    future_predictions = forecast[['ds', 'yhat']].rename(columns={'yhat': target_column})
    return future_predictions

def merge_regressor_with_main_data(main_df, regressor_df, regressor_column):
    """
    Merge the regressor predictions with the main data.

    Parameters:
    - main_df: DataFrame containing the main data.
    - regressor_df: DataFrame containing the regressor predictions.
    - regressor_column: The name of the regressor column.

    Returns:
    - merged_df: DataFrame containing the main data merged with the regressor predictions.
    """
    merged_df = pd.merge(main_df, regressor_df[['ds', regressor_column]], on='ds', how='left')
    return merged_df

def train_main_model_with_regressor(main_df, target_column, regressor_column):
    """
    Train a Prophet model with an additional regressor.

    Parameters:
    - main_df: DataFrame containing the main data.
    - target_column: The name of the target column to be predicted.
    - regressor_column: The name of the regressor column.

    Returns:
    - model: Trained Prophet model.
    """
    model = Prophet()
    model.add_regressor(regressor_column)
    main_df = main_df.rename(columns={target_column: 'y', 'ds': 'ds'})
    model.fit(main_df)
    return model

def predict_with_main_model(model, future_df):
    """
    Make predictions using the main model.

    Parameters:
    - model: Trained Prophet model.
    - future_df: DataFrame containing future dates and regressor values.

    Returns:
    - forecast: DataFrame containing the predictions.
    """
    forecast = model.predict(future_df)
    return forecast

def plot_forecast(model, forecast):
    """
    Plot the forecast.

    Parameters:
    - model: Trained Prophet model.
    - forecast: DataFrame containing the predictions.
    """
    fig = model.plot(forecast)
    plt.show()
    fig = model.plot_components(forecast)
    plt.show()